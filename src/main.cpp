#include "zctc/decoder.hh"
#include <vector>
#include <iostream>

/*
logits = torch.randn((1, 24, 512), device=0)
sorted_indices = torch.argsort(logits, dim=2, descending=True)
labels = torch.IntTensor(1, 283, 12)
timesteps = torch.IntTensor(1, 283, 12)

decoder = _zctc.Decoder(0, 283, 40, 0.9)

decoder.batch_decode(logits.tolist(), sorted_indices.tolist(), labels.tolist(), timesteps.tolist())

print(labels{0}{0})

*/

int main(int argc, char** argv) {
    std::vector<std::vector<std::vector<float>>> logits = {{{0.2968, 0.0912, 0.7428, 0.5030, 0.1075, 0.8555, 0.6346, 0.7288},
         {0.2663, 0.2082, 0.9039, 0.5635, 0.1341, 0.8064, 0.9844, 0.9730},
         {0.3168, 0.5974, 0.2339, 0.2441, 0.3028, 0.2899, 0.9688, 0.3137},
         {0.6175, 0.8629, 0.2486, 0.5142, 0.9587, 0.5120, 0.3561, 0.1667},
         {0.5996, 0.7009, 0.0589, 0.9650, 0.7978, 0.2145, 0.2866, 0.9115},
         {0.6089, 0.2024, 0.8300, 0.8018, 0.1803, 0.4856, 0.2408, 0.5636},
         {0.2932, 0.0514, 0.0613, 0.1173, 0.2107, 0.7955, 0.1343, 0.2345},
         {0.2901, 0.4693, 0.4932, 0.0737, 0.6393, 0.9418, 0.4514, 0.5989},
         {0.9272, 0.8401, 0.0897, 0.2867, 0.2247, 0.7745, 0.5829, 0.8330},
         {0.8389, 0.3805, 0.9435, 0.4989, 0.3457, 0.0919, 0.7800, 0.3181},
         {0.7057, 0.3154, 0.8140, 0.9975, 0.8659, 0.5152, 0.7080, 0.7507},
         {0.1910, 0.2710, 0.1956, 0.5932, 0.6576, 0.7567, 0.0852, 0.9799}}};

    std::vector<std::vector<std::vector<int>>> sorted_indices = {{{5, 2, 7, 6, 3, 0, 4, 1},
         {6, 7, 2, 5, 3, 0, 1, 4},
         {6, 1, 0, 7, 4, 5, 3, 2},
         {4, 1, 0, 3, 5, 6, 2, 7},
         {3, 7, 4, 1, 0, 6, 5, 2},
         {2, 3, 0, 7, 5, 6, 1, 4},
         {5, 0, 7, 4, 6, 3, 2, 1},
         {5, 4, 7, 2, 1, 6, 0, 3},
         {0, 1, 7, 5, 6, 3, 4, 2},
         {2, 0, 6, 3, 1, 4, 7, 5},
         {3, 4, 2, 7, 6, 0, 5, 1},
         {7, 5, 4, 3, 1, 2, 0, 6}}};

    std::vector<std::vector<std::vector<int>>> labels(
        1, std::vector<std::vector<int>>(20, std::vector<int>(12, 0))
    );
    std::vector<std::vector<std::vector<int>>> timesteps(
        1, std::vector<std::vector<int>>(20, std::vector<int>(12, 0))
    );

    Decoder decoder(0, 20, 20, 6, 0.9);
    decoder.batch_decode(logits, sorted_indices, labels, timesteps, 1, 12);

    for (int& l : labels[0][0])
        std::cout << l << " ";

    std::cout << "\n";

    return 0;
}

/*
{{{0.2968, 0.0912, 0.7428, 0.5030, 0.1075, 0.8555, 0.6346, 0.7288},
         {0.2663, 0.2082, 0.9039, 0.5635, 0.1341, 0.8064, 0.9844, 0.9730},
         {0.3168, 0.5974, 0.2339, 0.2441, 0.3028, 0.2899, 0.9688, 0.3137},
         {0.6175, 0.8629, 0.2486, 0.5142, 0.9587, 0.5120, 0.3561, 0.1667},
         {0.5996, 0.7009, 0.0589, 0.9650, 0.7978, 0.2145, 0.2866, 0.9115},
         {0.6089, 0.2024, 0.8300, 0.8018, 0.1803, 0.4856, 0.2408, 0.5636},
         {0.2932, 0.0514, 0.0613, 0.1173, 0.2107, 0.7955, 0.1343, 0.2345},
         {0.2901, 0.4693, 0.4932, 0.0737, 0.6393, 0.9418, 0.4514, 0.5989},
         {0.9272, 0.8401, 0.0897, 0.2867, 0.2247, 0.7745, 0.5829, 0.8330},
         {0.8389, 0.3805, 0.9435, 0.4989, 0.3457, 0.0919, 0.7800, 0.3181},
         {0.7057, 0.3154, 0.8140, 0.9975, 0.8659, 0.5152, 0.7080, 0.7507},
         {0.1910, 0.2710, 0.1956, 0.5932, 0.6576, 0.7567, 0.0852, 0.9799}}} 


{{{5, 2, 7, 6, 3, 0, 4, 1},
         {6, 7, 2, 5, 3, 0, 1, 4},
         {6, 1, 0, 7, 4, 5, 3, 2},
         {4, 1, 0, 3, 5, 6, 2, 7},
         {3, 7, 4, 1, 0, 6, 5, 2},
         {2, 3, 0, 7, 5, 6, 1, 4},
         {5, 0, 7, 4, 6, 3, 2, 1},
         {5, 4, 7, 2, 1, 6, 0, 3},
         {0, 1, 7, 5, 6, 3, 4, 2},
         {2, 0, 6, 3, 1, 4, 7, 5},
         {3, 4, 2, 7, 6, 0, 5, 1},
         {7, 5, 4, 3, 1, 2, 0, 6}}}

*/
