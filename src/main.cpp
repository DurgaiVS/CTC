#include "zctc/decoder.hh"
#include <vector>
#include <iostream>

/*
logits = torch.randn((1, 24, 512), device=0)
sorted_indices = torch.argsort(logits, dim=2, descending=True)
labels = torch.IntTensor(1, 283, 12)
timesteps = torch.IntTensor(1, 283, 12)

decoder = _zctc.Decoder(0, 283, 40, 0.9)

decoder.batch_decode(logits.tolist(), sorted_indices.tolist(), labels.tolist(), timesteps.tolist())

print(labels{0}{0})

*/

int main(int argc, char** argv) {
    std::vector<float> logits = {
        0.9089, 0.0107, 0.6980, 0.1238, 0.2815, 0.6270, 0.9709, 0.8088,
        0.9861, 0.3144, 0.1067, 0.2552, 0.5815, 0.1199, 0.2873, 0.0802,
        0.3462, 0.5572, 0.7620, 0.3730, 0.2487, 0.6418, 0.0315, 0.3753,
        0.2700, 0.1216, 0.7614, 0.5687, 0.8727, 0.8109, 0.9930, 0.0939,
        0.3237, 0.6731, 0.6927, 0.2757, 0.7734, 0.1091, 0.8449, 0.2831,
        0.4618, 0.6340, 0.7351, 0.5908, 0.3547, 0.2794, 0.8085, 0.4525,
        0.4086, 0.3488, 0.9772, 0.1286, 0.4708, 0.9481, 0.9295, 0.2580,
        0.4748, 0.5542, 0.2497, 0.6921, 0.2706, 0.1886, 0.0065, 0.3433,
        0.9994, 0.9383, 0.8431, 0.9676, 0.7847, 0.9870, 0.0445, 0.5189,
        0.8933, 0.7893, 0.8067, 0.8996, 0.0380, 0.4348, 0.5213, 0.5307,
        0.0819, 0.7705, 0.1082, 0.5714, 0.2755, 0.8001, 0.5231, 0.8232,
        0.6517, 0.3590, 0.1561, 0.9884, 0.4114, 0.3403, 0.1360, 0.9544
    };

    std::vector<int> sorted_indices = {
        6, 0, 7, 2, 5, 4, 3, 1,
        0, 4, 1, 6, 3, 5, 2, 7,
        2, 5, 1, 7, 3, 0, 4, 6,
        6, 4, 5, 2, 3, 0, 1, 7,
        6, 4, 2, 1, 0, 7, 3, 5,
        6, 2, 1, 3, 0, 7, 4, 5,
        2, 5, 6, 4, 0, 1, 7, 3,
        3, 1, 0, 7, 4, 2, 5, 6,
        0, 5, 3, 1, 2, 4, 7, 6,
        3, 0, 2, 1, 7, 6, 5, 4,
        7, 5, 1, 3, 6, 4, 2, 0,
        3, 7, 0, 4, 1, 5, 2, 6
    };

    std::vector<int> op = {6, 2, 6, 2, 3, 3, 7, 3, 0, 0, 0, 0};

    std::vector<int> labels(12, 0);
    std::vector<int> timesteps(12, 0);

    Decoder decoder(1, 0, 8, 8, 0.9, 1);
    decoder.decode(logits.data(), sorted_indices.data(), labels.data(), timesteps.data(), 12);

    for (int i = 0; i < 12; i++)
        std::cout << labels[i] << " == " << op[i] << std::endl;

    return 0;
}

/*
{{{0.2968, 0.0912, 0.7428, 0.5030, 0.1075, 0.8555, 0.6346, 0.7288},
         {0.2663, 0.2082, 0.9039, 0.5635, 0.1341, 0.8064, 0.9844, 0.9730},
         {0.3168, 0.5974, 0.2339, 0.2441, 0.3028, 0.2899, 0.9688, 0.3137},
         {0.6175, 0.8629, 0.2486, 0.5142, 0.9587, 0.5120, 0.3561, 0.1667},
         {0.5996, 0.7009, 0.0589, 0.9650, 0.7978, 0.2145, 0.2866, 0.9115},
         {0.6089, 0.2024, 0.8300, 0.8018, 0.1803, 0.4856, 0.2408, 0.5636},
         {0.2932, 0.0514, 0.0613, 0.1173, 0.2107, 0.7955, 0.1343, 0.2345},
         {0.2901, 0.4693, 0.4932, 0.0737, 0.6393, 0.9418, 0.4514, 0.5989},
         {0.9272, 0.8401, 0.0897, 0.2867, 0.2247, 0.7745, 0.5829, 0.8330},
         {0.8389, 0.3805, 0.9435, 0.4989, 0.3457, 0.0919, 0.7800, 0.3181},
         {0.7057, 0.3154, 0.8140, 0.9975, 0.8659, 0.5152, 0.7080, 0.7507},
         {0.1910, 0.2710, 0.1956, 0.5932, 0.6576, 0.7567, 0.0852, 0.9799}}} 


{{{5, 2, 7, 6, 3, 0, 4, 1},
         {6, 7, 2, 5, 3, 0, 1, 4},
         {6, 1, 0, 7, 4, 5, 3, 2},
         {4, 1, 0, 3, 5, 6, 2, 7},
         {3, 7, 4, 1, 0, 6, 5, 2},
         {2, 3, 0, 7, 5, 6, 1, 4},
         {5, 0, 7, 4, 6, 3, 2, 1},
         {5, 4, 7, 2, 1, 6, 0, 3},
         {0, 1, 7, 5, 6, 3, 4, 2},
         {2, 0, 6, 3, 1, 4, 7, 5},
         {3, 4, 2, 7, 6, 0, 5, 1},
         {7, 5, 4, 3, 1, 2, 0, 6}}}

*/
